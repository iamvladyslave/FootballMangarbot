from flask import Flask
import telebot
from telebot import types
from threading import Thread

# –í–∞—à —Ç–æ–∫–µ–Ω
bot = telebot.TeleBot('8087901925:AAH2cQ1f3O_dyL-uFCyDYz20PYkC6KsXt_o')

# –í–∞—à username
ADMIN_USERNAME = '@vVv_075'

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å
sent_messages = {}

# –°–æ–∑–¥–∞–µ–º Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is running!"  # –ü—Ä–æ—Å—Ç–æ–π endpoint –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    show_main_menu(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    try:
        if call.data == "about_me":
            about_text = (
                "–ú–µ–Ω—è –∑–æ–≤—É—Ç [–í–∞—à–µ –∏–º—è], –∏ —è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–∏ Telegram-–±–æ—Ç–æ–≤! ü§ñ\n\n"
                "üì∏ –í–æ—Ç –Ω–µ–º–Ω–æ–≥–æ –æ –º–æ–µ–π —Ä–∞–±–æ—Ç–µ."
            )
            photo_path = "download.png"  # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —ç—Ç–æ—Ç —Ñ–∞–π–ª
            try:
                with open(photo_path, 'rb') as photo:
                    bot.send_photo(call.message.chat.id, photo, caption=about_text)
            except FileNotFoundError:
                bot.send_message(call.message.chat.id, "–§–∞–π–ª download.png –Ω–µ –Ω–∞–π–¥–µ–Ω!")

            # –ü–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏
            panel = types.InlineKeyboardMarkup(row_width=2)
            panel.add(
                types.InlineKeyboardButton("–†–∞—Å—Ü–µ–Ω–∫–∏üí∏", callback_data="pricing"),
                types.InlineKeyboardButton("–£—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ãüë®‚Äçüíª", callback_data="terms"),
                types.InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–πüìû", callback_data="contact")
            )
            bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:", reply_markup=panel)

        elif call.data == "pricing":
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
            delete_previous_messages(call.message.chat.id)
            pricing_message = bot.send_message(call.message.chat.id, "üí∏ **–†–∞—Å—Ü–µ–Ω–∫–∏**:\n- –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞: –æ—Ç $50.\n- –î–æ—Ä–∞–±–æ—Ç–∫–∞: –æ—Ç $20.")
            save_sent_message(call.message.chat.id, pricing_message.message_id)
            show_back_button(call.message)

        elif call.data == "terms":
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
            delete_previous_messages(call.message.chat.id)
            terms_message = bot.send_message(call.message.chat.id, "üë®‚Äçüíª **–£—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ã**:\n1. –ü–æ–ª–Ω–∞—è –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞.\n2. –°—Ä–æ–∫–∏ –æ–≥–æ–≤–∞—Ä–∏–≤–∞—é—Ç—Å—è –∑–∞—Ä–∞–Ω–µ–µ.")
            save_sent_message(call.message.chat.id, terms_message.message_id)
            show_back_button(call.message)

        elif call.data == "contact":
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ
            delete_previous_messages(call.message.chat.id)
            bot.send_message(call.message.chat.id, "üìû –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:")
            bot.register_next_step_handler(call.message, get_age)

        elif call.data == "back_to_menu":
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º –≤ –º–µ–Ω—é
            delete_previous_messages(call.message.chat.id)
            show_tasks_panel(call.message)

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback: {e}")

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def show_main_menu(message):
    welcome_text = (
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ —Ñ—É—Ç–±–æ–ª—å–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞!\n\n"
        "üéÆ –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å:\n"
        "- –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ–±–æ –º–Ω–µ.\n"
        "- –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏.\n"
        "- –°–≤—è–∂–∏—Ç–µ—Å—å —Å–æ –º–Ω–æ–π!"
    )
    markup = types.InlineKeyboardMarkup()
    button = types.InlineKeyboardButton("–ö—Ç–æ —è?", callback_data="about_me")
    markup.add(button)
    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ –∑–∞–¥–∞—á (–±–µ–∑ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥")
def show_tasks_panel(message):
    try:
        task_text = "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:"
        panel = types.InlineKeyboardMarkup(row_width=2)
        panel.add(
            types.InlineKeyboardButton("–†–∞—Å—Ü–µ–Ω–∫–∏üí∏", callback_data="pricing"),
            types.InlineKeyboardButton("–£—Å–ª–æ–≤–∏—è —Ä–∞–±–æ—Ç—ãüë®‚Äçüíª", callback_data="terms"),
            types.InlineKeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–πüìû", callback_data="contact")
        )
        bot.send_message(message.chat.id, task_text, reply_markup=panel)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ show_tasks_panel: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
def show_back_button(message):
    try:
        markup = types.InlineKeyboardMarkup()
        back = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back_to_menu")
        markup.add(back)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ show_back_button: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏–π
def save_sent_message(chat_id, message_id):
    if chat_id not in sent_messages:
        sent_messages[chat_id] = []
    sent_messages[chat_id].append(message_id)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
def delete_previous_messages(chat_id):
    try:
        if chat_id in sent_messages:
            for message_id in sent_messages[chat_id]:
                bot.delete_message(chat_id, message_id)
            sent_messages[chat_id] = []  # –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ delete_previous_messages: {e}")

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞
def get_age(message):
    try:
        age = int(message.text)
        bot.send_message(message.chat.id, f"–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç: {age}. –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
        bot.register_next_step_handler(message, get_name)
    except ValueError:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç (—á–∏—Å–ª–æ):")
        bot.register_next_step_handler(message, get_age)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ get_age: {e}")

def get_name(message):
    try:
        name = message.text
        bot.send_message(message.chat.id, f"–°–ø–∞—Å–∏–±–æ, {name}! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º Telegram-–∫–æ–Ω—Ç–∞–∫—Ç–æ–º:", reply_markup=contact_share_markup())
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ get_name: {e}")

# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞
def contact_share_markup():
    try:
        markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        contact_button = types.KeyboardButton("–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact=True)
        markup.add(contact_button)
        return markup
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ contact_share_markup: {e}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    try:
        if message.contact:
            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å HTML
            contact_info = (
                "<b>üö® –ù–æ–≤—ã–π –∫–æ–Ω—Ç–∞–∫—Ç! üö®</b>\n"
                "<b>üì± –ò–º—è:</b> {0}\n"
                "<b>üìû –¢–µ–ª–µ—Ñ–æ–Ω:</b> {1}\n".format(message.contact.first_name, message.contact.phone_number)
            )
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
            bot.send_message('677342937', contact_info, parse_mode='HTML')
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à –∫–æ–Ω—Ç–∞–∫—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
            # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º"
            bot.delete_message(message.chat.id, message.message_id)
            # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            markup = types.ReplyKeyboardRemove()  # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω–æ –∏–∑ –¥–µ–π—Å—Ç–≤–∏–π:", reply_markup=markup)

            # –í–æ–∑–≤—Ä–∞—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
            show_tasks_panel(message)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ handle_contact: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
def run_bot():
    bot.polling(non_stop=True)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram-–±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    t = Thread(target=run_bot)
    t.start()

    # –ó–∞–ø—É—Å–∫ Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app.run(host='0.0.0.0', port=5000)
